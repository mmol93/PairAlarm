plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.easyo.pairalarm"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures{
        viewBinding = true
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}



dependencies {
    def fragment_version = "1.4.1"
    def life_cycle = "2.5.0-alpha03"
    def coroutine = "1.6.0"
    def glide = "4.13.0"
    def hilt = "2.39.1"
    def hilt_view_model = "1.0.0-alpha03"
    def androidx_activity = "1.4.0"
    def androidx_core = "1.7.0"
    def appcompat = "1.4.1"
    def material_design = "1.5.0"
    def constraint_layout = "2.1.3"
    def okhttp = "4.9.3"
    def retrofit = "2.9.0"
    def groupie_version = "2.10.0"
    def roomVersion = "2.4.0-alpha05"
    def work_version = "2.7.1"
    def lottie = "4.2.1"
    def google_map = "18.0.2"
    def google_location = "19.0.1"
    def fitbutton = "2.0.0"

    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material_design"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    // Lottie - https://github.com/airbnb/lottie-android
    implementation "com.airbnb.android:lottie:$lottie"

    // Hilt - https://developer.android.com/training/dependency-injection/hilt-android?hl=ko
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"
    // Hilt with ViewModel - https://developer.android.com/training/dependency-injection/hilt-jetpack?hl=ko#viewmodels
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_view_model"
    // When using Kotlin.
    kapt "androidx.hilt:hilt-compiler:$hilt_view_model"
    // Hilt With WorkManager - https://developer.android.com/training/dependency-injection/hilt-jetpack?hl=ko#viewmodels
    implementation "androidx.hilt:hilt-work:$hilt_view_model"
    // When using Kotlin.
    kapt "androidx.hilt:hilt-compiler:$hilt_view_model"

    // Room - https://developer.android.com/training/data-storage/room?hl=ko
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$roomVersion")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

    // WorkManager - https://developer.android.com/topic/libraries/architecture/workmanager/basics?hl=ko
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")

    // Coroutine -https://github.com/Kotlin/kotlinx.coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine"

    // androidx.fragment - https://developer.android.com/jetpack/androidx/releases/fragment#1.4.0
    implementation("androidx.fragment:fragment-ktx:$fragment_version")

    // androidx.activity - https://developer.android.com/jetpack/androidx/releases/activity?hl=ko
    implementation "androidx.activity:activity-ktx:$androidx_activity"

    // Lifecycle - https://developer.android.com/jetpack/androidx/releases/lifecycle?hl=ko
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$life_cycle"

    // Groupie - https://github.com/lisawray/groupie
    implementation "com.github.lisawray.groupie:groupie:$groupie_version"
    implementation "com.github.lisawray.groupie:groupie-viewbinding:$groupie_version"
    implementation "com.github.lisawray.groupie:groupie-databinding:$groupie_version"

    // Google play Service - https://developers.google.com/android/guides/setup
    implementation "com.google.android.gms:play-services-maps:$google_map"
    implementation "com.google.android.gms:play-services-location:$google_location"

    // 커스텀 FAB
    implementation(files("libs/customFloating-release.aar"))

    // FitButton - https://github.com/nikartm/FitButton
    implementation "io.github.nikartm:fit-button:$fitbutton"

    // okHttp - https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    // retrofit - https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}